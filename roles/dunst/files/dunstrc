# vi: ft=cfg

[global]
    font = Noto Mono Nerd Font 11

    icon_position = left

    ####
    #### ICON THEMING
    ####

    ##
    ## OLD Way: Setup an hardcoded icon path
    ##
    # icon_path = "/usr/share/icons/Yaru/48/notifications:/usr/share/icons/Yaru/16/status:/usr/share/icons/Yaru/22/status:/usr/share/icons/Yaru/24/status:/usr/share/icons/Yaru/32/status:/usr/share/icons/Yaru/48/status:/usr/share/icons/Yaru/64/status:/usr/share/icons/gnome/16x16/status/:/usr/share/icons/gnome/16x16/devices/"
    # icon_path = /usr/share/icons/Adwaita/32x32/status/:/usr/share/icons/Adwaita/32x32/devices/:/usr/share/icons/Adwaita/32x32/emblems/:/usr/share/icons/Adwaita/32x32/actions/:/usr/share/icons/Adwaita/32x32/emotes/

    ##
    ## New way specify icon themes with fallbacks and preferred icon_size
    ##
    icon_size = 32
    enable_recursive_icon_lookup = true
    icon_theme = Adwaita,breeze-dark,Numix,Yaru,Faenza,DMZ-White,Vanilla-DMZ


    min_icon_size = 32
    max_icon_size = 64

    markup = full
    corner_radius = 8
    # Specify where to make an ellipsis in long lines.
    # Possible values are "start", "middle" and "end".
    ellipsize = middle

    # Ignore newlines '\n' in notifications.
    ignore_newline = no

    # Stack together notifications with the same content
    stack_duplicates = true

    # Hide the count of stacked notifications with the same content
    hide_duplicate_count = false

    # Display indicators for URLs (U) and actions (A).
    show_indicators = yes

    # The format of the message. Possible variables are:
    #   %a  appname
    #   %s  summary
    #   %b  body
    #   %i  iconname (including its path)
    #   %I  iconname (without its path)
    #   %p  progress value if set ([  0%] to [100%]) or nothing
    # Markup is allowed
    format = "%a\n<b>%s</b>\n%b"


    # Sort messages by urgency
    sort = yes

    # Show how many messages are currently hidden (because of geometry)
    indicate_hidden = yes

    # alignment of message text.
    # Possible values are "left", "center" and "right"
    alignment = left

    # show age of message if message is older than show_age_threshold seconds.
    # set to -1 to disable
    show_age_threshold = 60

    # split notifications into multiple lines if they don't fit into geometry
    word_wrap = yes

    # Position the notification in the top right corner
    origin = top-right

    ### geometry
    height = 128
    offset = 16x32

    # The transparency of the window. range: [0; 100]
    # This option will only work if a compositing windowmanager is present (e.g. xcompmgr, compiz, etc..)
    transparency = 0

    # Don't remove messages, if the user is idle (no mouse or keyboard input)
    # for longer than idle_threshold seconds.
    # Set to 0 to disable.
    idle_threshold = 120

    # Turn on the progess bar. It appears when a progress hint is passed with
    # for example dunstify -h int:value:12
    progress_bar = true

    # Set the progress bar height. This includes the frame, so make sure
    # it's at least twice as big as the frame width.
    progress_bar_height = 10

    # Set the frame width of the progress bar
    progress_bar_frame_width = 1

    # Set the minimum width for the progress bar
    progress_bar_min_width = 150

    # Set the maximum width for the progress bar
    progress_bar_max_width = 300

    highlight="#7aa2f7"

    # Which monitor should the notifications be displayed on.
    monitor = 0

    # Defines where the notifications should be placed in a multi-monitor
    # setup. All values except none override the monitor setting.
    follow = mouse

    # Display notification on focused monitor. Possible modes are:
    # mouse: follow mouse pointer
    # keyboard: follow window with keyboard focus
    # none: don't follow anything
    #
    # "keyboard" needs a windowmanager that exports the _NET_ACTIVE_WINDOW property.
    # This should be the case for almost all modern windowmanagers.
    #
    # If this option is set to mouse or keyboard, the monitor option will be
    # ignored.
    follow = keyboard

    # should a notification popped up from history be sticky or
    # timeout as if it would normally do.
    sticky_history = yes

    # The height of a single line. If the height is smaller than the font height,
    # it will get raised to the font height.
    # This adds empty space above and under the text.
    line_height = 0

    # Draw a line of 'separatpr_height' pixel height between two notifications.
    # Set to 0 to disable
    separator_height = 2

    # padding between text and separator
    padding = 8

    # horizontal padding
    horizontal_padding = 8

    frame_width = 3
    frame_color = "#C3BAC6"
    separator_color = frame

    # dmenu path
    dmenu = /usr/bin/dmenu -p dunst:

    # browser for opening urls in context menu
    browser = /usr/bin/firefox -new-tab

    mouse_left_click = close_current
    mouse_middle_click = do_action, close_current
    mouse_right_click = close_all

[urgency_low]
    # IMPORTANT: colors have to be defined in quotation marks.
    # Otherwise the '#' and following  would be interpreted as a comment.
    background = "#1f2335"
    foreground = "#c0caf5"
    frame_color = "#414868"
    timeout = 8

[urgency_normal]
    background = "#1f2335"
    foreground = "#c0caf5"
    frame_color = "#414868"
    timeout = 10

[urgency_critical]
    background = "#1f2335"
    foreground = "#c0caf5"
    frame_color = "#f7768e"
    timeout = 0

[appname=notify-osd]
    # Do not show appname if app is notify-osd,
    # i.e. possible notification generating from an arcaic bash script
    format = "<b>%s</b>\n%b"
