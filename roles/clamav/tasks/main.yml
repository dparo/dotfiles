---

- name: Install
  ansible.builtin.dnf:
    name:
      - clamav
      - clamav-update
      - clamd
    state: present
  become: true
  when: ansible_env.RUNNING_INSIDE_DOCKER is undefined
  tags:
    - clamav


- name: Refresh clamav database
  ansible.builtin.command: freshclam
  become: true
  ignore_errors: true
  when: ansible_env.RUNNING_INSIDE_DOCKER is undefined
  tags:
    - clamav


- name: Setup clamav daemon config
  ansible.builtin.copy:
    dest: /etc/clamd.d/scan.conf
    mode: 0644
    content: |
      User clamscan
      LocalSocket /run/clamd.scan/clamd.sock

      VirusEvent /etc/clamd.d/virus-event.bash

      LogFile /var/log/clamd.scan
      LogSyslog yes

      MaxThreads 2
      MaxScanSize 1024M
      MaxFileSize 512M

      ExcludePath ^/proc/
      ExcludePath ^/sys/
      ExcludePath ^/run/
      ExcludePath ^/swapfile

      ###
      ### On Access Scanning
      ###
      OnAccessExcludeUname clamscan
      OnAccessExcludeRootUID true
      # Scan even when files are created or moved
      OnAccessExtraScanning true
      OnAccessMountPath /
      OnAccessIncludePath /home
      OnAccessExcludePath /proc/
      OnAccessExcludePath /sys/
      OnAccessExcludePath /run/
      OnAccessExcludePath /swapfile
  become: True
  when: ansible_env.RUNNING_INSIDE_DOCKER is undefined
  tags:
    - clamav


- name: Setup Virus Event Script
  ansible.builtin.copy:
    dest: /etc/clamd.d/virus-event.bash
    mode: 0755
    content: |
      #!/bin/bash

      PATH=/usr/bin
      ALERT="Signature detected by clamav: $CLAM_VIRUSEVENT_VIRUSNAME in $CLAM_VIRUSEVENT_FILENAME"

      for ADDRESS in /run/user/*; do
        USERID=${ADDRESS#/run/user/}
        /usr/bin/sudo -u "#$USERID" DBUS_SESSION_BUS_ADDRESS="unix:path=$ADDRESS/bus" PATH="$PATH" \
            /usr/bin/notify-send -u critical -i dialog-warning "Virus found!" "$ALERT"
      done
  become: True
  when: ansible_env.RUNNING_INSIDE_DOCKER is undefined
  tags:
    - clamav

- name: Create a clamav-clamonacc.service override directory
  ansible.builtin.file:
    owner: root
    group: root
    mode: 0755
    path: /etc/systemd/system/clamav-clamonacc.service.d
    state: directory
  become: True
  when: ansible_env.RUNNING_INSIDE_DOCKER is undefined

- name: Create log dir
  ansible.builtin.file:
    owner: clamscan
    group: clamscan
    mode: 0755
    path: /var/log/clamav
    state: directory
  become: True
  when: ansible_env.RUNNING_INSIDE_DOCKER is undefined


- name: Override clamav-clamonacc.service (On Access Scanning) to use --fdpass
  ansible.builtin.copy:
    content: |
      [Service]
      ExecStart=
      ExecStart=/usr/sbin/clamonacc -F --config-file=/etc/clamd.d/scan.conf --fdpass --log=/var/log/clamav/clamonacc.log
    dest: /etc/systemd/system/clamav-clamonacc.service.d/override.conf
    mode: 0644
  become: True
  when: ansible_env.RUNNING_INSIDE_DOCKER is undefined
  tags:
    - clamav


- name: Reload system services
  ansible.builtin.systemd:
    daemon_reload: true
    scope: system
  become: True
  when: ansible_env.RUNNING_INSIDE_DOCKER is undefined
  ignore_errors: true
  tags:
    - systemd


- name: Enable services
  ansible.builtin.systemd:
    name: "{{ item }}"
    enabled: true
  become: True
  when: ansible_env.RUNNING_INSIDE_DOCKER is undefined
  loop:
    - clamav-freshclam.service       # Refresh Virus Database at boot
    - clamav-clamonacc.service       # On Access Scanning
    - clamd@scan.service             # Enable daemon autostarting with /etc/clamd.d/{scan}.service
  tags:
    - clamav


## TODO: Use `clamdscan --recursive --multiscan --fdpass /` and a custom service / timer to perform scheduled full scans at specific times
