# vi: ft=tmux

set -gw mode-keys vi            # Bindings for copy mode
set -g status-keys emacs        # Status line bindings

unbind-key  C-b
unbind-key  C-a
set -g prefix2 C-b

bind-key -T prefix C-b send-prefix
bind-key -T prefix r source-file ~/.config/tmux/tmux.conf

bind-key -T prefix   b       copy-mode
bind-key -T prefix   Space   copy-mode
bind-key -T prefix   Up      copy-mode
bind-key -T prefix   Down    copy-mode
bind-key -T prefix   Right   copy-mode
bind-key -T prefix   Left    copy-mode

bind-key -T prefix h  split-window -h
bind-key -T prefix v  split-window -v
bind-key -T prefix \\ split-window -h
bind-key -T prefix |  split-window -h
bind-key -T prefix -  split-window -v
bind-key -T prefix _  split-window -v

bind-key -T root M-S-Down resize-pane -D 5
bind-key -T root M-S-Up resize-pane -U 5
bind-key -T root M-S-Left resize-pane -L 5
bind-key -T root M-S-Right resize-pane -R 5

bind-key -T root M-j resize-pane -D 5
bind-key -T root M-k resize-pane -U 5
bind-key -T root M-h resize-pane -L 5
bind-key -T root M-l resize-pane -R 5

bind-key -T root M-0 select-window -t :0
bind-key -T root M-1 select-window -t :1
bind-key -T root M-2 select-window -t :2
bind-key -T root M-3 select-window -t :3
bind-key -T root M-4 select-window -t :4
bind-key -T root M-5 select-window -t :5
bind-key -T root M-6 select-window -t :6
bind-key -T root M-7 select-window -t :7
bind-key -T root M-8 select-window -t :8
bind-key -T root M-9 select-window -t :9

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -T root 'M-Left' if-shell "$is_vim" 'send-keys M-Left'  'select-pane -L'
bind-key -T root 'M-Down' if-shell "$is_vim" 'send-keys M-Down'  'select-pane -D'
bind-key -T root 'M-Up' if-shell "$is_vim" 'send-keys M-Up'  'select-pane -U'
bind-key -T root 'M-Right' if-shell "$is_vim" 'send-keys M-Right'  'select-pane -R'

bind-key -T copy-mode-vi M-Left select-pane -L
bind-key -T copy-mode-vi M-Down select-pane -D
bind-key -T copy-mode-vi M-Up select-pane -U
bind-key -T copy-mode-vi M-Right select-pane -R


bind-key -T copy-mode-vi    Escape if-shell -F "#{selection_present}" \
                                        "send-keys -X clear-selection" \
                                        "send-keys -X cancel"
bind-key -T copy-mode-vi    Space if-shell -F "#{selection_present}" \
                                         "send-keys -X rectangle-toggle" \
                                         "send-keys -X begin-selection"
bind-key -T copy-mode-vi    C-d if-shell -F "#{selection_present}" \
                                        "send-keys -X clear-selection" \
                                        "send-keys -X cancel"

# Clear screen, redraw prompt (if shell) and clear scrollback history
bind-key -T  root         C-l  send-keys C-l \; clear-history
bind-key -T  prefix       C-l  send-keys -R C-l \; clear-history

# Key to rename session:                                                                C-b F2
# Equivalently it is possible to rename the session with the default keybind:           C-b $
bind-key    -T prefix       F2                   command-prompt -I "#S" "rename-session -- '%%'"
bind-key    -T prefix       S-F2                 command-prompt -I "#S" "rename-session -- '%%'"


bind-key    -T copy-mode-vi    MouseDown1Pane       select-pane
bind-key    -T copy-mode-vi    MouseDrag1Pane       select-pane \; send-keys -X begin-selection

# NOTE: Even though i don't like the copy-selection-and-cancel behaviour, this is required due
#       to a tmux bug. If using copy-selection or copy-selection-no-clear (the desired)
#       on a scroll with empty lines (eg after pressing C-l), selecting empty lines
#       makes tmux completely hang requiring it to be killed with `pkill -KILL` command
#       NOTE(29 December 2021): Tmux 3.1c has this bug present!!!
#       NOTE(29 December 2021): Fixed in tmux 3.2a. Copy-pipe-and-cancel,copy-selection-no-clear can now be used in tmux 3.2a without bugs
bind-key    -T copy-mode-vi    MouseDragEnd1Pane    send-keys -X copy-selection-no-clear
# bind-key    -T copy-mode-vi    MouseDragEnd1Pane    send-keys -X copy-pipe-and-cancel

bind-key    -T copy-mode-vi    DoubleClick1Pane     select-pane -t = \; if-shell -F "#{||:#{pane_in_mode},#{mouse_any_flag}}" "send -X clear-selection ; send -X select-word ; run -d0.3 ; send -X copy-selection-no-clear"
bind-key    -T root            DoubleClick1Pane     select-pane -t = \; if-shell -F "#{||:#{pane_in_mode},#{mouse_any_flag}}" "send -M" "copy-mode -H ; send -X select-word ; run -d0.3 ; send -X copy-selection-no-clear"
bind-key    -T copy-mode-vi    TripleClick1Pane     select-pane -t = \; if-shell -F "#{||:#{pane_in_mode},#{mouse_any_flag}}" "send -X clear-selection ; send -X select-line ; run -d0.3 ; send -X copy-selection-no-clear"
bind-key    -T root            TripleClick1Pane     select-pane -t = \; if-shell -F "#{||:#{pane_in_mode},#{mouse_any_flag}}" "send -M" "copy-mode -H ; send -X select-line ; run -d0.3 ; send -X copy-selection-no-clear"


# unbind-key  the mouse wheel from scrolling windows when scrolling on the bottom status bar (window list)
unbind-key    -T root         WheelUpStatus
unbind-key    -T root         WheelDownStatus


bind-key -T copy-mode-vi     C-Up                send-keys -X previous-paragraph
bind-key -T copy-mode-vi     C-Down              send-keys -X next-paragraph
bind-key -T copy-mode-vi     C-Left              send-keys -X previous-word
bind-key -T copy-mode-vi     C-Right             send-keys -X next-word


bind-key -T copy-mode-vi      C-a      send-keys -X start-of-line
bind-key -T copy-mode-vi      C-e      send-keys -X end-of-line


bind-key -T copy-mode-vi      M-w      send-keys -X copy-pipe
bind-key -T copy-mode-vi      C-w      send-keys -X copy-pipe
bind-key -T copy-mode-vi      C-S-c    send-keys -X copy-pipe
bind-key -T copy-mode-vi      C-g      send-keys -FX search-forward "#{copy_cursor_word}"


bind-key -T copy-mode-vi    C-Space if-shell -F "#{selection_present}" \
                                         "send-keys -X clear-selection" \
                                         "send-keys -X begin-selection"

bind-key -T copy-mode-vi    v if-shell -F "#{selection_present}" \
                                         "send-keys -X clear-selection" \
                                         "send-keys -X begin-selection"
bind-key -T copy-mode-vi    V if-shell -F "#{selection_present}" \
                                         "send-keys -X clear-selection" \
                                         "send-keys -X select-line"
bind-key -T copy-mode-vi      y        send-keys -X copy-pipe
bind-key -T prefix   p     paste-buffer
bind-key -T prefix   C-y   paste-buffer

bind-key -T copy-mode-vi       C-c if-shell -F "#{selection_present}" \
                                        "send-keys -X copy-pipe ; send-keys -X cancel" \
                                        "send-keys -X cancel"

bind-key -T copy-mode-vi    Enter if-shell -F "#{selection_present}" \
                                        "send-keys -X copy-pipe  ; send-keys -X cancel" \
                                        "send-keys -X cancel"

bind-key -T copy-mode-vi       C-l send-keys -X cancel
