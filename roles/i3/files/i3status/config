###############################################################################
# ceerious i3 status config
# see "man i3status" for documentation.
#
# It is important that this file is edited as UTF-8.
# The following line should contain a sharp s:
# ß
# If the above line is not correctly displayed, fix your editor first!
###############################################################################

general {
    interval        = 5
    colors          = true
    output_format   = "i3bar"
    color_good      = '#ABE9B3'
    color_degraded  = '#F8BD96'
    color_bad       = '#F28FAD'
    separator       = "|"
}


order += "volume master"
# order += "volume mic"
order += "disk /"
order += "disk /home"
#order += "run_watch DHCP"
#order += "ipv6"
#order += "run_watch VPN"
order += "battery all"
order += "cpu_temperature 0"
order += "cpu_usage 0"
order += "load"
order += "memory"
order += "wireless _first_"
order += "ethernet _first_"
order += "tztime local"

wireless _first_ {
    format_up = " %quality %essid %ip"
    format_down = "睊"
}


ethernet "enp30s0" {
    #if you use %speed, i3status requires root privileges
    format_up = " %ip (%speed)"
    format_down = ""
}


ethernet _first_ {
    #if you use %speed, i3status requires root privileges
    format_up = " %ip (%speed)"
    format_down = ""
}

battery all {
    format = "%status %percentage %remaining"
    format_down = ""
    last_full_capacity = true
    integer_battery_capacity = true
    low_threshold = 11
    threshold_type = percentage
    hide_seconds = true
    status_chr = " "
    status_bat = " "
    status_unk = ""
    status_full = ""
}

run_watch DHCP {
    pidfile = "/var/run/dhclient*.pid"
}

run_watch VPN {
    pidfile = "/var/run/vpnc/pid"
}

tztime local {
    format = " %a %d %b %Y   %H:%M"
}

load {
    format = "  %1min"
}

cpu_usage {
    format = "  %usage"
    max_threshold = 90
    degraded_threshold = 75
}

# Second parameter is the thermal-zone to use
#     Run
#       for i in /sys/class/thermal/thermal_zone*; do echo "$i: $(<$i/type)"; done
#     to enumerate all the thermal zones on your system
cpu_temperature 0 {
    format = " %degrees°C"

    # Full path of temperature sysfs path
    # Use `sensors` to find preferred temperature source, then run
    #         for i in /sys/class/hwmon/hwmon*/temp*_input; do echo "$(<$(dirname $i)/name): $(cat ${i%_*}_label 2>/dev/null || echo $(basename ${i%_*})) $(readlink -f $i)"; done
    # to find path to desired file
    # Default reverts to thermal zone setting
    # path="/sys/devices/platform/coretemp.0/hwmon/hwmon5/temp1_input"
    path="/sys/devices/pci0000:00/0000:00:18.3/hwmon/hwmon0/temp2_input"
    max_threshold=75
}

disk "/" {
        format = " / %avail"
        prefix_type	= custom
        low_threshold = 20
        threshold_type = percentage_avail
}

disk "/home" {
        format = " /home %avail"
        prefix_type	= custom
        low_threshold = 20
        threshold_type = percentage_avail
}


memory {
        format = " %available"
        format_degraded = " %available"
        threshold_degraded =  10%
        threshold_critical =  5%
}

volume master {
    format = " %volume"
    format_muted = "ﱝ"
    device = "pulse"
    mixer = "Master"
    mixer_idx = 0
}

# volume mic {
#   format = " %volume"
#   format_muted = ""
#   device = "default"
#   mixer = "Capture"
#   mixer_idx = 0
# }
