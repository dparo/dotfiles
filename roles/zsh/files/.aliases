#!/bin/bash
# vi: ft=sh

# By aliasing sudo, we permit the shell to expand further aliases after sudo.
#  For example `sudo v` where `v` is an alias to `nvim` works only if this sudo alias
#  is defined
alias sudo='command sudo '

alias :q=exit
alias :q!=exit
alias v=nvim
alias vim=nvim
alias vi=nvim
alias parallel='parallel --will-cite'
alias onlyoffice='flatpak run --branch=stable --arch=x86_64 --command=desktopeditors --file-forwarding org.onlyoffice.desktopeditors'
alias dotfiles="tmux new-session -c \"\$USER_DOTFILES_LOCATION\" -A -s dotfiles"


function dotenv {
    set -a
    set -x
    source "${@:-.env}"
    { set +x; } 2>/dev/null
    set +a
}

function valid_shell_command {
    builtin type "$1" 1>/dev/null 2>/dev/null
}

function load-env {
    for var in "$@"; do
        if [ -f "$var" ]; then
            set -o allexport
            source "$var"
            set +o allexport
        fi
    done
}

function json2yml {
    python3 -c 'import sys, yaml, json; print(yaml.dump(json.loads(sys.stdin.read())))'
}

alias json2yaml=json2yml

function yml2json {
    python -c 'import sys, yaml, json; print(json.dumps(yaml.safe_load(sys.stdin.read()), indent=2))'
}

alias yaml2json=yml2json

if valid_shell_command fastfetch; then
    alias neofetch=fastfetch
fi


if valid_shell_command fdfind; then
    alias fd=fdfind
fi

if valid_shell_command eza; then
    alias ls='eza --icons -h'
    alias la='eza --icons -lah'
    alias ll='eza --icons -laFh'
else
    alias ls='ls --color=auto -h'
    alias la='ls --color=auto -lah'
    alias ll='ls --color=auto -laFh'
fi

if valid_shell_command bat; then
    alias cat='bat'
    alias less='bat'
fi

# Tokei is a better RUST replacement for cloc for counting line numbers in a code base
if valid_shell_command tokei; then
    alias cloc=tokei
fi

if valid_shell_command yt-dlp; then
    alias youtube-dl=yt-dlp
fi

run() {
    nohup "$@" >/dev/null 2>&1 &
    disown
}

if valid_shell_command handlr; then
    alias open='handlr open'
elif valid_shell_command mimeopen; then
    alias open='mimeopen'
else
    alias open='run xdg-open'
fi

if valid_shell_command yay; then
    alias update='yay -Syu && sudo flatpak update -y && sudo flatpak uninstall --unused -y'
elif valid_shell_command pacman; then
    alias update="sudo bash -c 'pacman -Syu && flatpak update -y && flatpak uninstall --unused -y'"
elif valid_shell_command apt; then
    alias update="sudo bash -c 'apt update && apt full-upgrade && apt autoremove --yes && snap refresh'"
elif valid_shell_command dnf; then
    alias update="sudo bash -c 'dnf upgrade --refresh && flatpak update -y && flatpak uninstall --unused -y'"
fi

alias ..='cd ..'
alias ..1='cd ..'
alias ..2='cd ../..'
alias ..3='cd ../../..'

alias dir='dir --color=auto'
alias vdir='vdir --color=auto'
alias grep='grep --color=auto'
alias fgrep='fgrep --color=auto'
alias egrep='egrep --color=auto'

alias watchmake=watchman-make

alias count='wc -l'
alias ag='rg --hidden --follow --glob=!.git/'
alias rg='rg --hidden --follow --glob=!.git/'
alias cls='printf "\033c"'
alias wanip='curl -w "\n" ifconfig.me'
alias svn="svn --config-dir \"\$XDG_CONFIG_HOME/subversion\""
alias dragon="dragon -x -a"
alias fm="run spacefm"
alias gksu='pkexec env DISPLAY=$DISPLAY XAUTHORITY=$XAUTHORITY'
alias cheat='cht.sh'
alias feh='feh --scale-down -Z'

alias mitmproxy="mitmproxy --set confdir=$XDG_CONFIG_HOME/mitmproxy"
alias mitmweb="mitmweb --set confdir=$XDG_CONFIG_HOME/mitmproxy"

alias nvidia-settings='nvidia-settings --verbose --config="$XDG_CONFIG_HOME"/nvidia/settings'
alias edit-shell-hist='fc -W; "$EDITOR" "$HISTFILE"; fc -R;'

# Kitty cat image to stdout (yes, show the image on the terminal)
alias icat="kitty +kitten icat"

if valid_shell_command "qemu-system-x86_64" && ! valid_shell_command "kvm"; then
    alias kvm="qemu-system-x86_64 -enable-kvm -machine type=q35,accel=kvm -device intel-iommu -cpu host -vga vmware"
fi

nohup() {
    command nohup "$@" 1>/dev/null 2>/dev/null &
    disown
}

alias mkdir='mkdir -pv'
mkfile() {
    command mkdir -pv "$(dirname "$@")" && touch "$@"
}

mkcdir() {
    mkdir -p -- "$1" &&
        cd -P -- "$1" || return "$?"
}

alias run='nohup'

alias rm='rm -I'
alias ln='ln -i -s'
alias gg='lazygit'
alias gp='git push origin'
alias gP='git pull origin'
alias gap='git add -p'

addlicense() {
    command addlicense -l mit -c "$(git config --get user.name)" "$@"
}

mvn_run() {
    local classpath="$1"
    shift
    mvn compile exec:java -Dexec.mainClass="$classpath" "$@"
}

if valid_shell_command nvr && [ "$NVIM_LISTEN_ADDRESS" != "" ]; then
    alias nvr=__dparo_alias_nvr_or_nvim
fi
